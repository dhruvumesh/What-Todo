{"version":3,"sources":["components/Form.jsx","components/Todo.jsx","components/TodoList.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Form","inputText","setInputText","todos","setTodos","setStatus","value","onChange","e","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","TodoList","filteredTodos","App","useState","status","setFilteredTodos","useEffect","getLocalTodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2b042cd6.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Form = ({ inputText, setInputText, todos, setTodos, setStatus }) => {\r\n  const inputTextHandler = (e) => {\r\n    setInputText(e.target.value);\r\n  };\r\n\r\n  const submitTodoHandler = (e) => {\r\n    e.preventDefault();\r\n    if (inputText !== \"\") {\r\n      setTodos([\r\n        ...todos,\r\n        {\r\n          text: inputText,\r\n          completed: false,\r\n          id: Math.random() * 1000,\r\n        },\r\n      ]);\r\n      setInputText(\"\");\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const statusHandler = (e) => {\r\n    setStatus(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <form>\r\n      <input\r\n        value={inputText}\r\n        onChange={inputTextHandler}\r\n        type=\"text\"\r\n        className=\"todo-input\"\r\n      />\r\n      <button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\r\n        <i className=\"fas fa-plus-square\"></i>\r\n      </button>\r\n      <div className=\"select\">\r\n        <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n          <option value=\"all\">All</option>\r\n          <option value=\"completed\">Completed</option>\r\n          <option value=\"uncompleted\">Uncompleted</option>\r\n        </select>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\nconst Todo = ({ text, todo, todos, setTodos }) => {\r\n  const deleteHandler = () => {\r\n    setTodos(todos.filter((el) => el.id !== todo.id));\r\n  };\r\n\r\n  const completedHandler = () => {\r\n    setTodos(\r\n      todos.map((item) => {\r\n        if (item.id === todo.id) {\r\n          return {\r\n            ...item,\r\n            completed: !item.completed,\r\n          };\r\n        }\r\n        return item;\r\n      })\r\n    );\r\n  };\r\n  return (\r\n    <div className=\"todo\">\r\n      <li className={`todo-item ${todo.completed ? \"completed\" : \"\"}`}>\r\n        {text}\r\n      </li>\r\n      <button onClick={completedHandler} className=\"complete-btn\">\r\n        <i className=\"fas fa-check\"></i>\r\n      </button>\r\n      <button onClick={deleteHandler} className=\"trash-btn\">\r\n        <i className=\"fas fa-trash\"></i>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Todo;\r\n","import React from \"react\";\r\nimport Todo from \"./Todo\";\r\n\r\nconst TodoList = ({ todos, setTodos, filteredTodos }) => {\r\n  return (\r\n    <div className=\"todo-container\">\r\n      <ul className=\"todo-list\">\r\n        {filteredTodos.map((todo) => (\r\n          <Todo\r\n            todos={todos}\r\n            setTodos={setTodos}\r\n            key={todo.id}\r\n            todo={todo}\r\n            text={todo.text}\r\n          />\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import \"./App.scss\";\nimport React, { useState, useEffect } from \"react\";\nimport Form from \"./components/Form\";\nimport TodoList from \"./components/TodoList\";\n\nconst App = () => {\n  //States\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState(\"all\");\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n  // Run once when app start\n  useEffect(() => {\n    getLocalTodos();\n  }, []);\n\n  //UseEffect\n  useEffect(() => {\n    filterHandler();\n    saveLocalTodos();\n  }, [todos, status]);\n\n  //Functions\n  const filterHandler = () => {\n    switch (status) {\n      case \"completed\":\n        setFilteredTodos(todos.filter((todo) => todo.completed === true));\n        break;\n\n      case \"uncompleted\":\n        setFilteredTodos(todos.filter((todo) => todo.completed === false));\n        break;\n\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  };\n\n  //Save to LocalStorage\n\n  const saveLocalTodos = () => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  };\n\n  const getLocalTodos = () => {\n    if (localStorage.getItem(\"todos\") === null) {\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    } else {\n      let todoLocal = JSON.parse(localStorage.getItem(\"todos\"));\n      setTodos(todoLocal);\n    }\n  };\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>What Todo .!</h1>\n      </header>\n      <Form\n        todos={todos}\n        setTodos={setTodos}\n        inputText={inputText}\n        setInputText={setInputText}\n        setStatus={setStatus}\n      />\n      <TodoList\n        filteredTodos={filteredTodos}\n        todos={todos}\n        setTodos={setTodos}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}